import java.util.ArrayList;
import java.io.IOException;
import java.io.FileReader;
import java.io.BufferedReader;

public class NGramMinder {
	public static void mine(ArrayList<String> docs, ArrayList<String> templates, ArrayList<Double> weights, ArrayList<String> ngrams) throws IOException
	{		
		//String containing the current template
		String curr_template;
		
		//Contains all subsets of the current template
		ArrayList<String> search_strings = new ArrayList<String>(); 
		
		//Position tracker
		int pos = 0;
		int begin = 0;
		
		//Loop through each document (sometimes more than once if it appeared for multiple templates)
		for(int i = 0; i < docs.size(); i++)
		{
			//Split the template by 'AND's
			//ASSUMPTION: All characters were set to lowercase before adding the 'AND' to the template
			curr_template = templates.get(i);
			pos = 0;
			begin = 0;
			while(pos < curr_template.length())
			{
				//Skip 'AND' if its at the beginning of the template
				if(pos == 0 && curr_template.charAt(pos) == 'A')
				{
					pos += 4;
					begin = pos;
				}
				
				//Check for the end of the string or an 'A'
				if((pos == curr_template.length() - 1 || curr_template.charAt(pos) == 'A') && pos != 0)
				{
					search_strings.add(curr_template.substring(begin,pos - 1));
					pos += 3;
					begin = pos;
				}				
				pos++;
			}
			
			//Search for an *exact* match of each template subset
				//Get the index of the string
			
			
			//If found, create 6 1-grams, 3 from each side and add them to the list of n-grams, along with their corresponding weights
		}
	}
}
